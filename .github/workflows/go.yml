name: Go
on: [push]
jobs:

  test:
    name: Test on go ${{ matrix.go_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go_Version: ['1.13']
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:

    - name: Set up Go ${{ matrix.go_version }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go_version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: All checks - not windows
      # because its a syntax error to do a simple '!' ??????
      if: startsWith(matrix.os, 'windows') == false
      # GOPATH and GOBIN are not being set correctly in the PATH. See setup-go#27
      run: |
        export PATH=${PATH}:`go env GOPATH`/bin
        go install golang.org/x/tools/cmd/goimports golang.org/x/lint/golint
        go vet
        golint -set_exit_status
        test -z $(goimports -l .)
        go test

    - name: All checks - windows
      # because its a syntax error to do a simple '!' ??????
      if: startsWith(matrix.os, 'windows') == true
      # GOPATH and GOBIN are not being set correctly in the PATH. See setup-go#27
      run: |
        go install golang.org/x/tools/cmd/goimports golang.org/x/lint/golint
        go vet
        go test
      #        golint -set_exit_status
      #        setx PATH %PATH%;'C:\Users\runneradmin\go\bin'
      #        test -z $(goimports -l .)

